//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaPresentacion.Web.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IUsuarioWCF")]
    public interface IUsuarioWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/ListadoUsuarios", ReplyAction="http://tempuri.org/IUsuarioWCF/ListadoUsuariosResponse")]
        CapaNegocio.Entidades.Usuario[] ListadoUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/ListadoUsuarios", ReplyAction="http://tempuri.org/IUsuarioWCF/ListadoUsuariosResponse")]
        System.Threading.Tasks.Task<CapaNegocio.Entidades.Usuario[]> ListadoUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Obtener", ReplyAction="http://tempuri.org/IUsuarioWCF/ObtenerResponse")]
        CapaNegocio.Entidades.Usuario Obtener(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Obtener", ReplyAction="http://tempuri.org/IUsuarioWCF/ObtenerResponse")]
        System.Threading.Tasks.Task<CapaNegocio.Entidades.Usuario> ObtenerAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Crear", ReplyAction="http://tempuri.org/IUsuarioWCF/CrearResponse")]
        bool Crear(CapaNegocio.Entidades.Usuario usuarioEnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Crear", ReplyAction="http://tempuri.org/IUsuarioWCF/CrearResponse")]
        System.Threading.Tasks.Task<bool> CrearAsync(CapaNegocio.Entidades.Usuario usuarioEnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Editar", ReplyAction="http://tempuri.org/IUsuarioWCF/EditarResponse")]
        bool Editar(CapaNegocio.Entidades.Usuario usuarioEnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Editar", ReplyAction="http://tempuri.org/IUsuarioWCF/EditarResponse")]
        System.Threading.Tasks.Task<bool> EditarAsync(CapaNegocio.Entidades.Usuario usuarioEnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Eliminar", ReplyAction="http://tempuri.org/IUsuarioWCF/EliminarResponse")]
        bool Eliminar(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioWCF/Eliminar", ReplyAction="http://tempuri.org/IUsuarioWCF/EliminarResponse")]
        System.Threading.Tasks.Task<bool> EliminarAsync(int idUsuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsuarioWCFChannel : CapaPresentacion.Web.ServiceReference1.IUsuarioWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsuarioWCFClient : System.ServiceModel.ClientBase<CapaPresentacion.Web.ServiceReference1.IUsuarioWCF>, CapaPresentacion.Web.ServiceReference1.IUsuarioWCF {
        
        public UsuarioWCFClient() {
        }
        
        public UsuarioWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsuarioWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsuarioWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsuarioWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CapaNegocio.Entidades.Usuario[] ListadoUsuarios() {
            return base.Channel.ListadoUsuarios();
        }
        
        public System.Threading.Tasks.Task<CapaNegocio.Entidades.Usuario[]> ListadoUsuariosAsync() {
            return base.Channel.ListadoUsuariosAsync();
        }
        
        public CapaNegocio.Entidades.Usuario Obtener(int idUsuario) {
            return base.Channel.Obtener(idUsuario);
        }
        
        public System.Threading.Tasks.Task<CapaNegocio.Entidades.Usuario> ObtenerAsync(int idUsuario) {
            return base.Channel.ObtenerAsync(idUsuario);
        }
        
        public bool Crear(CapaNegocio.Entidades.Usuario usuarioEnt) {
            return base.Channel.Crear(usuarioEnt);
        }
        
        public System.Threading.Tasks.Task<bool> CrearAsync(CapaNegocio.Entidades.Usuario usuarioEnt) {
            return base.Channel.CrearAsync(usuarioEnt);
        }
        
        public bool Editar(CapaNegocio.Entidades.Usuario usuarioEnt) {
            return base.Channel.Editar(usuarioEnt);
        }
        
        public System.Threading.Tasks.Task<bool> EditarAsync(CapaNegocio.Entidades.Usuario usuarioEnt) {
            return base.Channel.EditarAsync(usuarioEnt);
        }
        
        public bool Eliminar(int idUsuario) {
            return base.Channel.Eliminar(idUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarAsync(int idUsuario) {
            return base.Channel.EliminarAsync(idUsuario);
        }
    }
}
